<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.CDogs.Hoole.mapper.AccountMapper" >
  <resultMap id="BaseResultMap" type="com.CDogs.Hoole.pojo.Account" >
    <id column="person_ID" property="id" jdbcType="INTEGER" />
    <result column="person_email" property="email" jdbcType="VARCHAR" />
    <result column="person_phone" property="phone" jdbcType="VARCHAR" />
    <result column="person_state" property="state" jdbcType="VARCHAR" />
    <result column="person_create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="person_last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP" />
    <result column="person_school" property="school" jdbcType="VARCHAR" />
    <result column="person_address" property="address" jdbcType="VARCHAR" />
    <result column="person_sex" property="sex" jdbcType="VARCHAR" />
    <result column="person_birthday" property="birthday" jdbcType="TIMESTAMP" />
    <result column="person_constellation" property="constellation" jdbcType="VARCHAR" />
    <result column="person_signature" property="signature" jdbcType="VARCHAR" />
    <result column="person_company" property="company" jdbcType="VARCHAR" />
    <result column="person_grade" property="grade" jdbcType="INTEGER" />
    <result column="person_integration" property="integration" jdbcType="INTEGER" />
    <result column="person_postcode" property="postcode" jdbcType="VARCHAR" />
    <result column="person_nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="person_portrait" property="portrait" jdbcType="VARCHAR" />
    <result column="person_password" property="password" jdbcType="VARCHAR" />
    <result column="person_account_num" property="accountNum" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    person_ID, person_email, person_phone, person_state, person_create_time, person_last_login_time, 
    person_school, person_address, person_sex, person_birthday, person_constellation, 
    person_signature, person_company, person_grade, person_integration, person_postcode, 
    person_nickname, person_portrait, person_password, person_account_num
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.CDogs.Hoole.pojo.AccountExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hoole_account_t
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from hoole_account_t
    where person_ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from hoole_account_t
    where person_ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.CDogs.Hoole.pojo.AccountExample" >
    delete from hoole_account_t
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.CDogs.Hoole.pojo.Account" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into hoole_account_t (person_ID, person_email, person_phone, 
      person_state, person_create_time, person_last_login_time, 
      person_school, person_address, person_sex, 
      person_birthday, person_constellation, person_signature, 
      person_company, person_grade, person_integration, 
      person_postcode, person_nickname, person_portrait, 
      person_password, person_account_num)
    values (#{id,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{state,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{lastLoginTime,jdbcType=TIMESTAMP}, 
      #{school,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{birthday,jdbcType=TIMESTAMP}, #{constellation,jdbcType=VARCHAR}, #{signature,jdbcType=VARCHAR}, 
      #{company,jdbcType=VARCHAR}, #{grade,jdbcType=INTEGER}, #{integration,jdbcType=INTEGER}, 
      #{postcode,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{portrait,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{accountNum,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.CDogs.Hoole.pojo.Account" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into hoole_account_t
    <trim prefix="(" suffix=")" suffixOverrides="," >
      person_ID,
      <if test="email != null" >
        person_email,
      </if>
      <if test="phone != null" >
        person_phone,
      </if>
      <if test="state != null" >
        person_state,
      </if>
      <if test="createTime != null" >
        person_create_time,
      </if>
      <if test="lastLoginTime != null" >
        person_last_login_time,
      </if>
      <if test="school != null" >
        person_school,
      </if>
      <if test="address != null" >
        person_address,
      </if>
      <if test="sex != null" >
        person_sex,
      </if>
      <if test="birthday != null" >
        person_birthday,
      </if>
      <if test="constellation != null" >
        person_constellation,
      </if>
      <if test="signature != null" >
        person_signature,
      </if>
      <if test="company != null" >
        person_company,
      </if>
      <if test="grade != null" >
        person_grade,
      </if>
      <if test="integration != null" >
        person_integration,
      </if>
      <if test="postcode != null" >
        person_postcode,
      </if>
      <if test="nickname != null" >
        person_nickname,
      </if>
      <if test="portrait != null" >
        person_portrait,
      </if>
      <if test="password != null" >
        person_password,
      </if>
      <if test="accountNum != null" >
        person_account_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=INTEGER},
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null" >
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="school != null" >
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="constellation != null" >
        #{constellation,jdbcType=VARCHAR},
      </if>
      <if test="signature != null" >
        #{signature,jdbcType=VARCHAR},
      </if>
      <if test="company != null" >
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="integration != null" >
        #{integration,jdbcType=INTEGER},
      </if>
      <if test="postcode != null" >
        #{postcode,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="portrait != null" >
        #{portrait,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="accountNum != null" >
        #{accountNum,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.CDogs.Hoole.pojo.AccountExample" resultType="java.lang.Integer" >
    select count(*) from hoole_account_t
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update hoole_account_t
    <set >
      <if test="record.id != null" >
        person_ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.email != null" >
        person_email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        person_phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        person_state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        person_create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastLoginTime != null" >
        person_last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.school != null" >
        person_school = #{record.school,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        person_address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        person_sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null" >
        person_birthday = #{record.birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.constellation != null" >
        person_constellation = #{record.constellation,jdbcType=VARCHAR},
      </if>
      <if test="record.signature != null" >
        person_signature = #{record.signature,jdbcType=VARCHAR},
      </if>
      <if test="record.company != null" >
        person_company = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.grade != null" >
        person_grade = #{record.grade,jdbcType=INTEGER},
      </if>
      <if test="record.integration != null" >
        person_integration = #{record.integration,jdbcType=INTEGER},
      </if>
      <if test="record.postcode != null" >
        person_postcode = #{record.postcode,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null" >
        person_nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.portrait != null" >
        person_portrait = #{record.portrait,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        person_password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.accountNum != null" >
        person_account_num = #{record.accountNum,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update hoole_account_t
    set person_ID = #{record.id,jdbcType=INTEGER},
      person_email = #{record.email,jdbcType=VARCHAR},
      person_phone = #{record.phone,jdbcType=VARCHAR},
      person_state = #{record.state,jdbcType=VARCHAR},
      person_create_time = #{record.createTime,jdbcType=TIMESTAMP},
      person_last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      person_school = #{record.school,jdbcType=VARCHAR},
      person_address = #{record.address,jdbcType=VARCHAR},
      person_sex = #{record.sex,jdbcType=VARCHAR},
      person_birthday = #{record.birthday,jdbcType=TIMESTAMP},
      person_constellation = #{record.constellation,jdbcType=VARCHAR},
      person_signature = #{record.signature,jdbcType=VARCHAR},
      person_company = #{record.company,jdbcType=VARCHAR},
      person_grade = #{record.grade,jdbcType=INTEGER},
      person_integration = #{record.integration,jdbcType=INTEGER},
      person_postcode = #{record.postcode,jdbcType=VARCHAR},
      person_nickname = #{record.nickname,jdbcType=VARCHAR},
      person_portrait = #{record.portrait,jdbcType=VARCHAR},
      person_password = #{record.password,jdbcType=VARCHAR},
      person_account_num = #{record.accountNum,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.CDogs.Hoole.pojo.Account" >
    update hoole_account_t
    <set >
      <if test="email != null" >
        person_email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        person_phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        person_state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        person_create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null" >
        person_last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="school != null" >
        person_school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        person_address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        person_sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        person_birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="constellation != null" >
        person_constellation = #{constellation,jdbcType=VARCHAR},
      </if>
      <if test="signature != null" >
        person_signature = #{signature,jdbcType=VARCHAR},
      </if>
      <if test="company != null" >
        person_company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        person_grade = #{grade,jdbcType=INTEGER},
      </if>
      <if test="integration != null" >
        person_integration = #{integration,jdbcType=INTEGER},
      </if>
      <if test="postcode != null" >
        person_postcode = #{postcode,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        person_nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="portrait != null" >
        person_portrait = #{portrait,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        person_password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="accountNum != null" >
        person_account_num = #{accountNum,jdbcType=VARCHAR},
      </if>
    </set>
    where person_ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.CDogs.Hoole.pojo.Account" >
    update hoole_account_t
    set person_email = #{email,jdbcType=VARCHAR},
      person_phone = #{phone,jdbcType=VARCHAR},
      person_state = #{state,jdbcType=VARCHAR},
      person_create_time = #{createTime,jdbcType=TIMESTAMP},
      person_last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      person_school = #{school,jdbcType=VARCHAR},
      person_address = #{address,jdbcType=VARCHAR},
      person_sex = #{sex,jdbcType=VARCHAR},
      person_birthday = #{birthday,jdbcType=TIMESTAMP},
      person_constellation = #{constellation,jdbcType=VARCHAR},
      person_signature = #{signature,jdbcType=VARCHAR},
      person_company = #{company,jdbcType=VARCHAR},
      person_grade = #{grade,jdbcType=INTEGER},
      person_integration = #{integration,jdbcType=INTEGER},
      person_postcode = #{postcode,jdbcType=VARCHAR},
      person_nickname = #{nickname,jdbcType=VARCHAR},
      person_portrait = #{portrait,jdbcType=VARCHAR},
      person_password = #{password,jdbcType=VARCHAR},
      person_account_num = #{accountNum,jdbcType=VARCHAR}
    where person_ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>