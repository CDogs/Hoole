<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.CDogs.Hoole.mapper.AccountMapper" >
  <resultMap id="BaseResultMap" type="com.CDogs.Hoole.pojo.Account" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP" />
    <result column="gender" property="gender" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="school" property="school" jdbcType="VARCHAR" />
    <result column="bind_email" property="bindEmail" jdbcType="VARCHAR" />
    <result column="bind_phone" property="bindPhone" jdbcType="VARCHAR" />
    <result column="account_num" property="accountNum" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="portrait" property="portrait" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="TIMESTAMP" />
    <result column="postcode" property="postcode" jdbcType="VARCHAR" />
    <result column="grade" property="grade" jdbcType="INTEGER" />
    <result column="integration" property="integration" jdbcType="INTEGER" />
    <result column="company" property="company" jdbcType="VARCHAR" />
    <result column="signature" property="signature" jdbcType="VARCHAR" />
    <result column="constellation" property="constellation" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, email, phone, nickname, create_time, last_login_time, gender, state, school, 
    bind_email, bind_phone, account_num, password, portrait, address, birthday, postcode, 
    grade, integration, company, signature, constellation
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.CDogs.Hoole.pojo.AccountExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hoole_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from hoole_account
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from hoole_account
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.CDogs.Hoole.pojo.AccountExample" >
    delete from hoole_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.CDogs.Hoole.pojo.Account" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into hoole_account (ID, email, phone, 
      nickname, create_time, last_login_time, 
      gender, state, school, 
      bind_email, bind_phone, account_num, 
      password, portrait, address, 
      birthday, postcode, grade, 
      integration, company, signature, 
      constellation)
    values (#{id,jdbcType=BIGINT}, #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{lastLoginTime,jdbcType=TIMESTAMP}, 
      #{gender,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, 
      #{bindEmail,jdbcType=VARCHAR}, #{bindPhone,jdbcType=VARCHAR}, #{accountNum,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{portrait,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{birthday,jdbcType=TIMESTAMP}, #{postcode,jdbcType=VARCHAR}, #{grade,jdbcType=INTEGER}, 
      #{integration,jdbcType=INTEGER}, #{company,jdbcType=VARCHAR}, #{signature,jdbcType=VARCHAR}, 
      #{constellation,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.CDogs.Hoole.pojo.Account" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into hoole_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      ID,
      <if test="email != null" >
        email,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="lastLoginTime != null" >
        last_login_time,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="school != null" >
        school,
      </if>
      <if test="bindEmail != null" >
        bind_email,
      </if>
      <if test="bindPhone != null" >
        bind_phone,
      </if>
      <if test="accountNum != null" >
        account_num,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="portrait != null" >
        portrait,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="postcode != null" >
        postcode,
      </if>
      <if test="grade != null" >
        grade,
      </if>
      <if test="integration != null" >
        integration,
      </if>
      <if test="company != null" >
        company,
      </if>
      <if test="signature != null" >
        signature,
      </if>
      <if test="constellation != null" >
        constellation,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=BIGINT},
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null" >
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="bindEmail != null" >
        #{bindEmail,jdbcType=VARCHAR},
      </if>
      <if test="bindPhone != null" >
        #{bindPhone,jdbcType=VARCHAR},
      </if>
      <if test="accountNum != null" >
        #{accountNum,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="portrait != null" >
        #{portrait,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="postcode != null" >
        #{postcode,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="integration != null" >
        #{integration,jdbcType=INTEGER},
      </if>
      <if test="company != null" >
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="signature != null" >
        #{signature,jdbcType=VARCHAR},
      </if>
      <if test="constellation != null" >
        #{constellation,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.CDogs.Hoole.pojo.AccountExample" resultType="java.lang.Integer" >
    select count(*) from hoole_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update hoole_account
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null" >
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastLoginTime != null" >
        last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gender != null" >
        gender = #{record.gender,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.school != null" >
        school = #{record.school,jdbcType=VARCHAR},
      </if>
      <if test="record.bindEmail != null" >
        bind_email = #{record.bindEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.bindPhone != null" >
        bind_phone = #{record.bindPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.accountNum != null" >
        account_num = #{record.accountNum,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.portrait != null" >
        portrait = #{record.portrait,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null" >
        birthday = #{record.birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.postcode != null" >
        postcode = #{record.postcode,jdbcType=VARCHAR},
      </if>
      <if test="record.grade != null" >
        grade = #{record.grade,jdbcType=INTEGER},
      </if>
      <if test="record.integration != null" >
        integration = #{record.integration,jdbcType=INTEGER},
      </if>
      <if test="record.company != null" >
        company = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.signature != null" >
        signature = #{record.signature,jdbcType=VARCHAR},
      </if>
      <if test="record.constellation != null" >
        constellation = #{record.constellation,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update hoole_account
    set ID = #{record.id,jdbcType=BIGINT},
      email = #{record.email,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      gender = #{record.gender,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      school = #{record.school,jdbcType=VARCHAR},
      bind_email = #{record.bindEmail,jdbcType=VARCHAR},
      bind_phone = #{record.bindPhone,jdbcType=VARCHAR},
      account_num = #{record.accountNum,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      portrait = #{record.portrait,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=TIMESTAMP},
      postcode = #{record.postcode,jdbcType=VARCHAR},
      grade = #{record.grade,jdbcType=INTEGER},
      integration = #{record.integration,jdbcType=INTEGER},
      company = #{record.company,jdbcType=VARCHAR},
      signature = #{record.signature,jdbcType=VARCHAR},
      constellation = #{record.constellation,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.CDogs.Hoole.pojo.Account" >
    update hoole_account
    <set >
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null" >
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="bindEmail != null" >
        bind_email = #{bindEmail,jdbcType=VARCHAR},
      </if>
      <if test="bindPhone != null" >
        bind_phone = #{bindPhone,jdbcType=VARCHAR},
      </if>
      <if test="accountNum != null" >
        account_num = #{accountNum,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="portrait != null" >
        portrait = #{portrait,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="postcode != null" >
        postcode = #{postcode,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        grade = #{grade,jdbcType=INTEGER},
      </if>
      <if test="integration != null" >
        integration = #{integration,jdbcType=INTEGER},
      </if>
      <if test="company != null" >
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="signature != null" >
        signature = #{signature,jdbcType=VARCHAR},
      </if>
      <if test="constellation != null" >
        constellation = #{constellation,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.CDogs.Hoole.pojo.Account" >
    update hoole_account
    set email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      gender = #{gender,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      bind_email = #{bindEmail,jdbcType=VARCHAR},
      bind_phone = #{bindPhone,jdbcType=VARCHAR},
      account_num = #{accountNum,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      portrait = #{portrait,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      postcode = #{postcode,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=INTEGER},
      integration = #{integration,jdbcType=INTEGER},
      company = #{company,jdbcType=VARCHAR},
      signature = #{signature,jdbcType=VARCHAR},
      constellation = #{constellation,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>